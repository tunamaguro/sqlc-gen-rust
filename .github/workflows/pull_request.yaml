name: Rust CI

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    paths:
      - "**.rs"
      - '**Cargo.toml'
      - '**Cargo.lock'
      - "rust-toolchain.toml"
      - "rustfmt.toml"
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install Rust
        uses: moonrepo/setup-rust@ede6de059f8046a5e236c94046823e2af11ca670 # v1.2.2
        with:
          components: rustfmt
          cache-base: main
      - name: Setup Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3.0.0
      - name: Run format
        run: |
          just format-ci

  prepare-sqlx-postgres:
      name: Prepare sqlx postgres
      runs-on: ubuntu-latest
      services:
        postgres:
          image: postgres:17.0-bookworm
          ports:
            - 5432:5432
          env:
            POSTGRES_USER: root
            POSTGRES_PASSWORD: password
            POSTGRES_DB: app
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
      steps:
        - name: Checkout PR branch
          uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        - name: Install Rust
          uses: moonrepo/setup-rust@ede6de059f8046a5e236c94046823e2af11ca670 # v1.2.2
          with:
            bins: sqlx-cli
            cache-base: main
        - name: Setup Protoc
          uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
          with:
            version: "29.3"
            repo-token: ${{ secrets.GITHUB_TOKEN }}
        - name: Prepare sqlx
          env:
            DATABASE_URL: postgres://root:password@localhost:5432/app
          run: |
            cargo sqlx migrate run --source ./examples/e-commerce/migrations/
            cargo sqlx prepare --workspace --all -no-dotenv
        - name: Upload artifact
          uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
          with:
            name: sqlx-postgres-prepare
            path: .sqlx/
            retention-days: 1

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: prepare-sqlx-postgres
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install Rust
        uses: moonrepo/setup-rust@ede6de059f8046a5e236c94046823e2af11ca670 # v1.2.2
        with:
          components: clippy
          cache-base: main
      - name: Setup Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3.0.0
      - name: Setup Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          version: "29.3"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Download .sqlx directory
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: sqlx-postgres-prepare
          path: .sqlx/
      - name: Run lint
        env:
            SQLX_OFFLINE: true
        run: |
          just lint-ci
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: prepare-sqlx-postgres
    services:
      postgres:
        image: postgres:17.0-bookworm
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: password
          POSTGRES_DB: app
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install Rust
        uses: moonrepo/setup-rust@ede6de059f8046a5e236c94046823e2af11ca670 # v1.2.2
        with:
          targets: wasm32-wasip1
          cache-base: main
      - name: Setup Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3.0.0
      - name: Setup Protoc
        uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          version: "29.3"
          repo-token: ${{ secrets.GITHUB_TOKEN }}         
      - name: Setup sqlc
        uses: sqlc-dev/setup-sqlc@c0209b9199cd1cce6a14fc27cabcec491b651761 # v4.0.0
        with:
          sqlc-version: '1.28.0'
      - name: Regenerate query
        run: |
          just generate
      - name: Download .sqlx directory
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: sqlx-postgres-prepare
          path: .sqlx/
      - name: Run test
        env:
          DATABASE_URL: postgres://root:password@localhost:5432/app
          SQLX_OFFLINE: true
        run: |
          just test
