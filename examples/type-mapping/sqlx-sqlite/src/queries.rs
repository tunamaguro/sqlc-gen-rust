//! Code generated by sqlc-gen-rust. SHOULD NOT EDIT.
//! sqlc version: v1.28.0
//! sqlc-gen-rust version: v0.1.9

#[derive(sqlx::FromRow)]
pub struct GetMappingRow {
    #[sqlx(rename = "aff_integer_val")]
    pub aff_integer_val: i64,
    #[sqlx(rename = "aff_real_val")]
    pub aff_real_val: f64,
    #[sqlx(rename = "aff_text_val")]
    pub aff_text_val: String,
    #[sqlx(rename = "aff_blob_val")]
    pub aff_blob_val: Vec<u8>,
    #[sqlx(rename = "int_val")]
    pub int_val: i64,
    #[sqlx(rename = "integer_val")]
    pub integer_val: i64,
    #[sqlx(rename = "tinyint_val")]
    pub tinyint_val: i8,
    #[sqlx(rename = "smallint_val")]
    pub smallint_val: i16,
    #[sqlx(rename = "mediumint_val")]
    pub mediumint_val: i32,
    #[sqlx(rename = "bigint_val")]
    pub bigint_val: i64,
    #[sqlx(rename = "unsigned_big_int_val")]
    pub unsigned_big_int_val: i64,
    #[sqlx(rename = "int2_val")]
    pub int_2_val: i16,
    #[sqlx(rename = "int8_val")]
    pub int_8_val: i64,
    #[sqlx(rename = "character20_val")]
    pub character_20_val: String,
    #[sqlx(rename = "varchar255_val")]
    pub varchar_255_val: String,
    #[sqlx(rename = "varying_char255_val")]
    pub varying_char_255_val: String,
    #[sqlx(rename = "nchar55_val")]
    pub nchar_55_val: String,
    #[sqlx(rename = "native_char70_val")]
    pub native_char_70_val: String,
    #[sqlx(rename = "nvarchar100_val")]
    pub nvarchar_100_val: String,
    #[sqlx(rename = "text_val")]
    pub text_val: String,
    #[sqlx(rename = "clob_val")]
    pub clob_val: String,
    #[sqlx(rename = "real_val")]
    pub real_val: f64,
    #[sqlx(rename = "double_val")]
    pub double_val: f64,
    #[sqlx(rename = "double_precision_val")]
    pub double_precision_val: f64,
    #[sqlx(rename = "float_val")]
    pub float_val: f64,
    #[sqlx(rename = "numeric_val")]
    pub numeric_val: f64,
    #[sqlx(rename = "decimal10_5_val")]
    pub decimal_10_5_val: f64,
    #[sqlx(rename = "boolean_val")]
    pub boolean_val: bool,
    #[sqlx(rename = "date_val")]
    pub date_val: chrono::NaiveDate,
    #[sqlx(rename = "time_val")]
    pub time_val: chrono::NaiveTime,
    #[sqlx(rename = "datetime_val")]
    pub datetime_val: chrono::NaiveDateTime,
}
pub struct GetMapping;
impl GetMapping {
    pub const QUERY: &'static str = r"SELECT
    aff_integer_val,
    aff_real_val,
    aff_text_val,
    aff_blob_val,
    int_val,
    integer_val,
    tinyint_val,
    smallint_val,
    mediumint_val,
    bigint_val,
    unsigned_big_int_val,
    int2_val,
    int8_val,
    character20_val,
    varchar255_val,
    varying_char255_val,
    nchar55_val,
    native_char70_val,
    nvarchar100_val,
    text_val,
    clob_val,
    real_val,
    double_val,
    double_precision_val,
    float_val,
    numeric_val,
    decimal10_5_val,
    boolean_val,
    date_val,
    time_val,
    datetime_val
FROM mapping";
    pub fn query_as<'a>(
        &'a self,
    ) -> sqlx::query::QueryAs<
        'a,
        sqlx::Sqlite,
        GetMappingRow,
        <sqlx::Sqlite as sqlx::Database>::Arguments<'a>,
    > {
        sqlx::query_as::<_, GetMappingRow>(Self::QUERY)
    }
    pub fn query_one<'a, 'b, A>(
        &'a self,
        conn: A,
    ) -> impl Future<Output = Result<GetMappingRow, sqlx::Error>> + Send + 'a
    where
        A: sqlx::Acquire<'b, Database = sqlx::Sqlite> + Send + 'a,
    {
        async move {
            let mut conn = conn.acquire().await?;
            let val = self.query_as().fetch_one(&mut *conn).await?;
            Ok(val)
        }
    }
    pub fn query_opt<'a, 'b, A>(
        &'a self,
        conn: A,
    ) -> impl Future<Output = Result<Option<GetMappingRow>, sqlx::Error>> + Send + 'a
    where
        A: sqlx::Acquire<'b, Database = sqlx::Sqlite> + Send + 'a,
    {
        async move {
            let mut conn = conn.acquire().await?;
            let val = self.query_as().fetch_optional(&mut *conn).await?;
            Ok(val)
        }
    }
}
impl GetMapping {
    pub const fn builder() -> GetMappingBuilder<'static, ()> {
        GetMappingBuilder {
            fields: (),
            _phantom: std::marker::PhantomData,
        }
    }
}
pub struct GetMappingBuilder<'a, Fields = ()> {
    fields: Fields,
    _phantom: std::marker::PhantomData<&'a ()>,
}
impl<'a> GetMappingBuilder<'a, ()> {
    pub const fn build(self) -> GetMapping {
        let () = self.fields;
        GetMapping {}
    }
}
#[derive(sqlx::FromRow)]
pub struct InsertMappingRow {}
pub struct InsertMapping<'a> {
    aff_integer_val: i64,
    aff_real_val: f64,
    aff_text_val: &'a str,
    aff_blob_val: &'a [u8],
    int_val: i64,
    integer_val: i64,
    tinyint_val: i8,
    smallint_val: i16,
    mediumint_val: i32,
    bigint_val: i64,
    unsigned_big_int_val: i64,
    int_2_val: i16,
    int_8_val: i64,
    character_20_val: &'a str,
    varchar_255_val: &'a str,
    varying_char_255_val: &'a str,
    nchar_55_val: &'a str,
    native_char_70_val: &'a str,
    nvarchar_100_val: &'a str,
    text_val: &'a str,
    clob_val: &'a str,
    real_val: f64,
    double_val: f64,
    double_precision_val: f64,
    float_val: f64,
    numeric_val: f64,
    decimal_10_5_val: f64,
    boolean_val: bool,
    date_val: &'a chrono::NaiveDate,
    time_val: &'a chrono::NaiveTime,
    datetime_val: &'a chrono::NaiveDateTime,
}
impl<'a> InsertMapping<'a> {
    pub const QUERY: &'static str = r"INSERT INTO mapping (
    aff_integer_val,
    aff_real_val,
    aff_text_val,
    aff_blob_val,
    int_val,
    integer_val,
    tinyint_val,
    smallint_val,
    mediumint_val,
    bigint_val,
    unsigned_big_int_val,
    int2_val,
    int8_val,
    character20_val,
    varchar255_val,
    varying_char255_val,
    nchar55_val,
    native_char70_val,
    nvarchar100_val,
    text_val,
    clob_val,
    real_val,
    double_val,
    double_precision_val,
    float_val,
    numeric_val,
    decimal10_5_val,
    boolean_val,
    date_val,
    time_val,
    datetime_val
) VALUES (
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?
)";
    pub fn query_as(
        &'a self,
    ) -> sqlx::query::QueryAs<
        'a,
        sqlx::Sqlite,
        InsertMappingRow,
        <sqlx::Sqlite as sqlx::Database>::Arguments<'a>,
    > {
        sqlx::query_as::<_, InsertMappingRow>(Self::QUERY)
            .bind(self.aff_integer_val)
            .bind(self.aff_real_val)
            .bind(self.aff_text_val)
            .bind(self.aff_blob_val)
            .bind(self.int_val)
            .bind(self.integer_val)
            .bind(self.tinyint_val)
            .bind(self.smallint_val)
            .bind(self.mediumint_val)
            .bind(self.bigint_val)
            .bind(self.unsigned_big_int_val)
            .bind(self.int_2_val)
            .bind(self.int_8_val)
            .bind(self.character_20_val)
            .bind(self.varchar_255_val)
            .bind(self.varying_char_255_val)
            .bind(self.nchar_55_val)
            .bind(self.native_char_70_val)
            .bind(self.nvarchar_100_val)
            .bind(self.text_val)
            .bind(self.clob_val)
            .bind(self.real_val)
            .bind(self.double_val)
            .bind(self.double_precision_val)
            .bind(self.float_val)
            .bind(self.numeric_val)
            .bind(self.decimal_10_5_val)
            .bind(self.boolean_val)
            .bind(self.date_val)
            .bind(self.time_val)
            .bind(self.datetime_val)
    }
    pub fn execute<'b, A>(
        &'a self,
        conn: A,
    ) -> impl Future<Output = Result<<sqlx::Sqlite as sqlx::Database>::QueryResult, sqlx::Error>>
    + Send
    + 'a
    where
        A: sqlx::Acquire<'b, Database = sqlx::Sqlite> + Send + 'a,
    {
        async move {
            let mut conn = conn.acquire().await?;
            sqlx::query(Self::QUERY)
                .bind(self.aff_integer_val)
                .bind(self.aff_real_val)
                .bind(self.aff_text_val)
                .bind(self.aff_blob_val)
                .bind(self.int_val)
                .bind(self.integer_val)
                .bind(self.tinyint_val)
                .bind(self.smallint_val)
                .bind(self.mediumint_val)
                .bind(self.bigint_val)
                .bind(self.unsigned_big_int_val)
                .bind(self.int_2_val)
                .bind(self.int_8_val)
                .bind(self.character_20_val)
                .bind(self.varchar_255_val)
                .bind(self.varying_char_255_val)
                .bind(self.nchar_55_val)
                .bind(self.native_char_70_val)
                .bind(self.nvarchar_100_val)
                .bind(self.text_val)
                .bind(self.clob_val)
                .bind(self.real_val)
                .bind(self.double_val)
                .bind(self.double_precision_val)
                .bind(self.float_val)
                .bind(self.numeric_val)
                .bind(self.decimal_10_5_val)
                .bind(self.boolean_val)
                .bind(self.date_val)
                .bind(self.time_val)
                .bind(self.datetime_val)
                .execute(&mut *conn)
                .await
        }
    }
}
impl<'a> InsertMapping<'a> {
    pub const fn builder() -> InsertMappingBuilder<
        'a,
        (
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
            (),
        ),
    > {
        InsertMappingBuilder {
            fields: (
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
                (),
            ),
            _phantom: std::marker::PhantomData,
        }
    }
}
pub struct InsertMappingBuilder<
    'a,
    Fields = (
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
        (),
    ),
> {
    fields: Fields,
    _phantom: std::marker::PhantomData<&'a ()>,
}
impl<
    'a,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            (),
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn aff_integer_val(
        self,
        aff_integer_val: i64,
    ) -> InsertMappingBuilder<
        'a,
        (
            i64,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            (),
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            (),
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn aff_real_val(
        self,
        aff_real_val: f64,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            f64,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            (),
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            (),
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn aff_text_val(
        self,
        aff_text_val: &'a str,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            &'a str,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            (),
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            (),
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn aff_blob_val(
        self,
        aff_blob_val: &'a [u8],
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            &'a [u8],
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            (),
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            (),
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn int_val(
        self,
        int_val: i64,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            i64,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            (),
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            (),
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn integer_val(
        self,
        integer_val: i64,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            i64,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            (),
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            (),
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn tinyint_val(
        self,
        tinyint_val: i8,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            i8,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            (),
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            (),
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn smallint_val(
        self,
        smallint_val: i16,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            i16,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            (),
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            (),
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn mediumint_val(
        self,
        mediumint_val: i32,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            i32,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            (),
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            (),
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn bigint_val(
        self,
        bigint_val: i64,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            i64,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            (),
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            (),
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn unsigned_big_int_val(
        self,
        unsigned_big_int_val: i64,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            i64,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            (),
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            (),
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn int_2_val(
        self,
        int_2_val: i16,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            i16,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            (),
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            (),
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn int_8_val(
        self,
        int_8_val: i64,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            i64,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            (),
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            (),
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn character_20_val(
        self,
        character_20_val: &'a str,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            &'a str,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            (),
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            (),
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn varchar_255_val(
        self,
        varchar_255_val: &'a str,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            &'a str,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            (),
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            (),
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn varying_char_255_val(
        self,
        varying_char_255_val: &'a str,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            &'a str,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            (),
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            (),
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn nchar_55_val(
        self,
        nchar_55_val: &'a str,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            &'a str,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            (),
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            (),
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn native_char_70_val(
        self,
        native_char_70_val: &'a str,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            &'a str,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            (),
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            (),
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn nvarchar_100_val(
        self,
        nvarchar_100_val: &'a str,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            &'a str,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            (),
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            (),
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn text_val(
        self,
        text_val: &'a str,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            &'a str,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            (),
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            (),
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn clob_val(
        self,
        clob_val: &'a str,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            &'a str,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            (),
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            (),
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn real_val(
        self,
        real_val: f64,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            f64,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            (),
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            (),
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn double_val(
        self,
        double_val: f64,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            f64,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            (),
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            (),
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn double_precision_val(
        self,
        double_precision_val: f64,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            f64,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            (),
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            (),
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn float_val(
        self,
        float_val: f64,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            f64,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            (),
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            (),
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn numeric_val(
        self,
        numeric_val: f64,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            f64,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            (),
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    BooleanVal,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            (),
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn decimal_10_5_val(
        self,
        decimal_10_5_val: f64,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            f64,
            BooleanVal,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            (),
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    DateVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            (),
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn boolean_val(
        self,
        boolean_val: bool,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            bool,
            DateVal,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            (),
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    TimeVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            (),
            TimeVal,
            DatetimeVal,
        ),
    >
{
    pub fn date_val(
        self,
        date_val: &'a chrono::NaiveDate,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            &'a chrono::NaiveDate,
            TimeVal,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            (),
            time_val,
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    DatetimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            (),
            DatetimeVal,
        ),
    >
{
    pub fn time_val(
        self,
        time_val: &'a chrono::NaiveTime,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            &'a chrono::NaiveTime,
            DatetimeVal,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            (),
            datetime_val,
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<
    'a,
    AffIntegerVal,
    AffRealVal,
    AffTextVal,
    AffBlobVal,
    IntVal,
    IntegerVal,
    TinyintVal,
    SmallintVal,
    MediumintVal,
    BigintVal,
    UnsignedBigIntVal,
    Int2Val,
    Int8Val,
    Character20Val,
    Varchar255Val,
    VaryingChar255Val,
    Nchar55Val,
    NativeChar70Val,
    Nvarchar100Val,
    TextVal,
    ClobVal,
    RealVal,
    DoubleVal,
    DoublePrecisionVal,
    FloatVal,
    NumericVal,
    Decimal105Val,
    BooleanVal,
    DateVal,
    TimeVal,
>
    InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            (),
        ),
    >
{
    pub fn datetime_val(
        self,
        datetime_val: &'a chrono::NaiveDateTime,
    ) -> InsertMappingBuilder<
        'a,
        (
            AffIntegerVal,
            AffRealVal,
            AffTextVal,
            AffBlobVal,
            IntVal,
            IntegerVal,
            TinyintVal,
            SmallintVal,
            MediumintVal,
            BigintVal,
            UnsignedBigIntVal,
            Int2Val,
            Int8Val,
            Character20Val,
            Varchar255Val,
            VaryingChar255Val,
            Nchar55Val,
            NativeChar70Val,
            Nvarchar100Val,
            TextVal,
            ClobVal,
            RealVal,
            DoubleVal,
            DoublePrecisionVal,
            FloatVal,
            NumericVal,
            Decimal105Val,
            BooleanVal,
            DateVal,
            TimeVal,
            &'a chrono::NaiveDateTime,
        ),
    > {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            (),
        ) = self.fields;
        let _phantom = self._phantom;
        InsertMappingBuilder {
            fields: (
                aff_integer_val,
                aff_real_val,
                aff_text_val,
                aff_blob_val,
                int_val,
                integer_val,
                tinyint_val,
                smallint_val,
                mediumint_val,
                bigint_val,
                unsigned_big_int_val,
                int_2_val,
                int_8_val,
                character_20_val,
                varchar_255_val,
                varying_char_255_val,
                nchar_55_val,
                native_char_70_val,
                nvarchar_100_val,
                text_val,
                clob_val,
                real_val,
                double_val,
                double_precision_val,
                float_val,
                numeric_val,
                decimal_10_5_val,
                boolean_val,
                date_val,
                time_val,
                datetime_val,
            ),
            _phantom,
        }
    }
}
impl<'a>
    InsertMappingBuilder<
        'a,
        (
            i64,
            f64,
            &'a str,
            &'a [u8],
            i64,
            i64,
            i8,
            i16,
            i32,
            i64,
            i64,
            i16,
            i64,
            &'a str,
            &'a str,
            &'a str,
            &'a str,
            &'a str,
            &'a str,
            &'a str,
            &'a str,
            f64,
            f64,
            f64,
            f64,
            f64,
            f64,
            bool,
            &'a chrono::NaiveDate,
            &'a chrono::NaiveTime,
            &'a chrono::NaiveDateTime,
        ),
    >
{
    pub const fn build(self) -> InsertMapping<'a> {
        let (
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        ) = self.fields;
        InsertMapping {
            aff_integer_val,
            aff_real_val,
            aff_text_val,
            aff_blob_val,
            int_val,
            integer_val,
            tinyint_val,
            smallint_val,
            mediumint_val,
            bigint_val,
            unsigned_big_int_val,
            int_2_val,
            int_8_val,
            character_20_val,
            varchar_255_val,
            varying_char_255_val,
            nchar_55_val,
            native_char_70_val,
            nvarchar_100_val,
            text_val,
            clob_val,
            real_val,
            double_val,
            double_precision_val,
            float_val,
            numeric_val,
            decimal_10_5_val,
            boolean_val,
            date_val,
            time_val,
            datetime_val,
        }
    }
}
